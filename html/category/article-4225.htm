<!doctype html>
<html lang="zh-CN">

<head>
        <!-- Required meta tags -->
    <link rel="canonical" href="https://irelandaddress.github.io/html/category/article-4225.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/irelandaddress/favicon.ico" type="image/x-icon"/>
    <title>springboot post接口接受json时，转换为对象时，属性都为null - Ireland Address</title>
        <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/icomoon/style.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/tiny-slider.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/aos.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?638cd9f716f7b41384d0241d34bf2f4c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <div class="site-mobile-menu site-navbar-target">
        <div class="site-mobile-menu-header">
            <div class="site-mobile-menu-close">
                <span class="icofont-close js-menu-toggle"></span>
            </div>
        </div>
        <div class="site-mobile-menu-body"></div>
    </div>
    <nav class="site-nav mt-3">
        <div class="container">
            <div class="site-navigation">
                                <a href="/" class="logo m-0 mt-2 float-start">Ireland Address</a>
                                <ul class="js-clone-nav d-none d-lg-inline-block text-start site-menu float-end">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
                <a href="#" class="burger ml-auto float-right site-menu-toggle js-menu-toggle d-inline-block d-lg-none" data-toggle="collapse" data-target="#main-navbar">
                    <span></span>
                </a>
            </div>
        </div>
    </nav>
    <div class="hero-section body-page">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <h2 class="heading mb-3" data-aos="fade-up" data-aos-delay="100">文章分类</h2>
                    <p class="mb-5" data-aos="fade-up" data-aos-delay="200">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                    </p>
                </div>
                <div class="col-lg-6">
                    <div class="img-wrap" data-aos="fade-left">
                        <img src="/assets/addons/xcblog/img/irelandaddress/hero_1.png" alt="Image" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="section section-3">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div data-aos="fade-up">
                        <h1 class="mb-5 text-center">springboot post接口接受json时，转换为对象时，属性都为null</h1>
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> 背景</h1> <p>在接口请求过程中，传递json对象，springboot转换为实体VO对象后，所有属性都为null。</p> <p>post请求：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/906be7b7a573b39f3666d7a9db51040e.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"></p> <p>后台接收请求：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/05ddf2c0b90f32735d17f86db29e93d2.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"></p> <p>当时就懵逼了…</p> <h1> 解决心路历程</h1> <h2> 查看springboot默认的HttpMessageConverter</h2> <pre><code>@Configuration @Component public class AppWebConfiguration implements WebMvcConfigurer {  	/** 	 * 重写添加拦截器方法并添加配置拦截器 	 *  	 * @param registry 	 */ 	@Override 	public void addInterceptors(InterceptorRegistry registry) { 	}  	@Override 	public void extendMessageConverters(List<HttpMessageConverter<?>> converters) { 		for (HttpMessageConverter<?> messageConverter : converters) { 			System.out.println(messageConverter);  		} 	}  } </code></pre> <p>默认的HttpMessageConverter如下：</p> <pre><code>org.springframework.http.converter.ByteArrayHttpMessageConverter@4ee488a7 org.springframework.http.converter.StringHttpMessageConverter@7c556701 org.springframework.http.converter.StringHttpMessageConverter@1650e1e1 org.springframework.http.converter.ResourceHttpMessageConverter@ffa6a44 org.springframework.http.converter.ResourceRegionHttpMessageConverter@65317aac org.springframework.http.converter.xml.SourceHttpMessageConverter@328b7464 org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter@2345d43d org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7f31325b org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter@113bd30b </code></pre> <p>所以解析jason时，用的转换器应该是MappingJackson2HttpMessageConverter。进入MappingJackson2HttpMessageConverter进行debug调试，发现，最后转换结果还真是null！<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/22e48516499729afa1af7041f55c91da.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"></p> <h2> 尝试直接用objectMapper转换对象看一下结果</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/db2115423176c8beb5c210dc38a712b6.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"><br /> 结果惊不惊喜，意不意外~。objectMapper把对象转为json时，属性变为<strong>下划线+小写</strong>风格了。<br /><strong>难怪对象的属性都为null，压根属性都不是同一个了</strong></p> <h2> 看看jackson配置能不能配置转换为驼峰</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/bf2c048cd54cb520e81c0ada59a14a40.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"><br /> 将命名策略修改为LOWER_CAMEL_CASE。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/b708831da249b856a64d07afd10f2ce3.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"><br /> 再看看转换结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/b5dca579b0c4fffe97e827e31d7b1191.jpg" alt="springboot post接口接受json时，转换为对象时，属性都为null"><br /> 成功转换为驼峰，对象属性也完美赋值！</p> <h2> 将springboot默认的HttpMessageConverter替换为阿里的FastJson转换器MappingJackson2HttpMessageConverter看看效果</h2> <pre><code>@Configuration public class FastJsonConfiguration {      @Bean     public HttpMessageConverters fastJsonHttpMessageConverters() {         FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();         FastJsonConfig fastJsonConfig = new FastJsonConfig();          List<MediaType> fastMediaTypes = new ArrayList<>();          // 处理中文乱码问题         fastJsonConfig.setCharset(Charset.forName("UTF-8"));         fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat);         // 设置时间格式         fastJsonConfig.setDateFormat("yyyy-MM-dd HH:mm:ss");          fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);         fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);          // 在转换器中添加配置信息         fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);         HttpMessageConverter converter = fastJsonHttpMessageConverter;          StringHttpMessageConverter stringConverter = new StringHttpMessageConverter();         stringConverter.setDefaultCharset(Charset.forName("UTF-8"));         stringConverter.setSupportedMediaTypes(fastMediaTypes);          return new HttpMessageConverters(stringConverter, converter);     } } </code></pre> <h3> 再次查看HttpMessageConverter如下：</h3> <pre><code>com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter@15219255 org.springframework.http.converter.ByteArrayHttpMessageConverter@4ee488a7 org.springframework.http.converter.StringHttpMessageConverter@7c556701 org.springframework.http.converter.StringHttpMessageConverter@1650e1e1 org.springframework.http.converter.ResourceHttpMessageConverter@ffa6a44 org.springframework.http.converter.ResourceRegionHttpMessageConverter@65317aac org.springframework.http.converter.xml.SourceHttpMessageConverter@328b7464 org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter@2345d43d org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7f31325b org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter@113bd30b </code></pre> <p>发现FastJsonHttpMessageConverter已经在MappingJackson2HttpMessageConverter之前，springboot序列化会优先采用FastJsonHttpMessageConverter。<br /> 再次查看接口解析，发现直接转换到了对象属性中。</p> </p></div> 			                    </div>

                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4224.htm">字符串替换 — C语言【由特殊到一般，找规律，定公式】</a></p>
                                                <p>下一个：<a href="/html/category/article-4226.htm">Cesium DrawCommand [1] 不谈地球 画个三角形</a></p>
                                            </div>

                    
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7103.htm" title="晚礼服十大品牌排行榜有哪些牌子(晚礼服十大品牌排行榜有哪些图片)">晚礼服十大品牌排行榜有哪些牌子(晚礼服十大品牌排行榜有哪些图片)</a></li>
                        <li class="py-2"><a href="/html/category/article-7332.htm" title="动物疫苗对人有害处吗知乎 动物疫苗对人有害处吗知乎">动物疫苗对人有害处吗知乎 动物疫苗对人有害处吗知乎</a></li>
                        <li class="py-2"><a href="/html/category/article-6964.htm" title="打动物疫苗不能吃什么东西呢图片（打疫苗期间不能吃什么）">打动物疫苗不能吃什么东西呢图片（打疫苗期间不能吃什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-6918.htm" title="天宠宠物医院怎么样可靠吗多少钱（天宠科技有限公司）">天宠宠物医院怎么样可靠吗多少钱（天宠科技有限公司）</a></li>
                        <li class="py-2"><a href="/html/category/article-6133.htm" title="最便宜的激光切割机(价格激光切割机)">最便宜的激光切割机(价格激光切割机)</a></li>
                        <li class="py-2"><a href="/html/category/article-6045.htm" title="上海地区宠物领养中心 上海地区宠物领养中心地址">上海地区宠物领养中心 上海地区宠物领养中心地址</a></li>
                        <li class="py-2"><a href="/html/category/article-7608.htm" title="豆干炒腊肉的做法大全窍门(豆干炒腊肉的做法大全)">豆干炒腊肉的做法大全窍门(豆干炒腊肉的做法大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-7333.htm" title="日式饭团的做法（日式饭团的做法和配料）">日式饭团的做法（日式饭团的做法和配料）</a></li>
                        <li class="py-2"><a href="/html/category/article-7148.htm" title="动物疫苗打多了好不好呢（动物疫苗打多了好不好呢视频）">动物疫苗打多了好不好呢（动物疫苗打多了好不好呢视频）</a></li>
                        <li class="py-2"><a href="/html/category/article-6826.htm" title="被猫抓了一下轻微破皮要***吗多少钱一只（被猫抓了一下轻微破皮要***吗多少钱一只）">被猫抓了一下轻微破皮要***吗多少钱一只（被猫抓了一下轻微破皮要***吗多少钱一只）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
        <div class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        Ireland Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/tiny-slider.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/aos.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/navbar.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/counter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/custom.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
<!doctype html>
<html lang="zh-CN">

<head>
        <!-- Required meta tags -->
    <link rel="canonical" href="https://irelandaddress.github.io/html/category/article-4289.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/irelandaddress/favicon.ico" type="image/x-icon"/>
    <title>golang对接阿里云私有Bucket上传图片、授权访问图片 - Ireland Address</title>
        <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/icomoon/style.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/tiny-slider.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/aos.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?638cd9f716f7b41384d0241d34bf2f4c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <div class="site-mobile-menu site-navbar-target">
        <div class="site-mobile-menu-header">
            <div class="site-mobile-menu-close">
                <span class="icofont-close js-menu-toggle"></span>
            </div>
        </div>
        <div class="site-mobile-menu-body"></div>
    </div>
    <nav class="site-nav mt-3">
        <div class="container">
            <div class="site-navigation">
                                <a href="/" class="logo m-0 mt-2 float-start">Ireland Address</a>
                                <ul class="js-clone-nav d-none d-lg-inline-block text-start site-menu float-end">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
                <a href="#" class="burger ml-auto float-right site-menu-toggle js-menu-toggle d-inline-block d-lg-none" data-toggle="collapse" data-target="#main-navbar">
                    <span></span>
                </a>
            </div>
        </div>
    </nav>
    <div class="hero-section body-page">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <h2 class="heading mb-3" data-aos="fade-up" data-aos-delay="100">文章分类</h2>
                    <p class="mb-5" data-aos="fade-up" data-aos-delay="200">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                    </p>
                </div>
                <div class="col-lg-6">
                    <div class="img-wrap" data-aos="fade-left">
                        <img src="/assets/addons/xcblog/img/irelandaddress/hero_1.png" alt="Image" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="section section-3">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div data-aos="fade-up">
                        <h1 class="mb-5 text-center">golang对接阿里云私有Bucket上传图片、授权访问图片</h1>
                          				  				  				<h1 id="golang对接阿里云私有bucket上传图片授权访问图片">golang对接阿里云私有Bucket上传图片、授权访问图片</h1> <h2 id="1为什么要设置私有bucket">1、为什么要设置私有bucket</h2> <ul> <li><strong>公共读写</strong>：互联网上任何用户都可以对该 Bucket 内的文件进行访问，并且向该 Bucket 写入数据。这有可能造成您数据的外泄以及费用激增，若被人恶意写入违法信息还可能会侵害您的合法权益</li> <li><strong>私有</strong>：只有该存储空间的拥有者可以对该存储空间内的文件进行读写操作，其他人无法访问该存储空间内的文件</li> </ul> <p><strong>鉴于以上，公司要求将bucket设置为私有，只有授权的用户才能访问</strong></p> <h2 id="2准备">2、准备</h2> <h3 id="21-创建ram账户">2.1 创建RAM账户</h3> <p>开通OSS后账户，创建RAM账户，使用STS临时访问凭证访问OSS，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://help.aliyun.com/document_detail/100624.htm?spm=5176.smartservice_service_robot-chat.0.0.1eea3cdaasIBTM"  target="_blank" rel="nofollow">具体参考阿里云文档</a></p> <p><strong>提示：在步骤四创建角色要将RAM角色赋予 AliyunOSSFullAccess 权限</strong> ，<br /> 因为此处没设置oss最高权限，我找了一天问题，大家<strong>谨记</strong>，写这篇博客也是记录一下我的填坑之路<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/d883f505b9a0402a78dd0fb52b728d3e.jpg" alt="golang对接阿里云私有Bucket上传图片、授权访问图片"></p> <h3 id="22-设置bucket">2.2 设置Bucket</h3> <ul> <li> <p>在对象存储中，Bucket列表创建私有Bucket<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/f9dc478d1ba6cc16de43be8a71aae669.jpg" alt="golang对接阿里云私有Bucket上传图片、授权访问图片"></p> </li> <li> <p>然后在此Bucket授权刚才创建OSS账号id，授权操作为完全控制<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/8ed3196f7c0c3a972146072a1f490aad.jpg" alt="golang对接阿里云私有Bucket上传图片、授权访问图片"></p> </li> </ul> <h2 id="3上菜">3、上菜</h2> <h3 id="31-常量及其结构体">3.1 常量及其结构体</h3> <ul> <li>根据自己阿里云信息去配置</li> </ul> <pre><code class="language-go">const ( 	AccessKeyId     = "**"//oss账户AK 	AccessKeySecret = "**"//oss账户ST 	stsEndpoint     = "**"//sts.阿里云对象存储地址 	RoleArn         = "**"//创建角色用到的 	RoleSessionName = "**"//创建角色用到的 	BucketName      = "**" //填写Bucket名称，例如examplebucket 	Endpoint        = "**"//阿里云对象存储地址 	UploadOssUrl    = "**" //返回给前端oss上传地址 ) type StsTokenInfo struct { 	StatusCode      int    `json:"StatusCode"` 	AccessKeyId     string `json:"AccessKeyId"` 	AccessKeySecret string `json:"AccessKeySecret"` 	SecurityToken   string `json:"SecurityToken"` 	Expiration      string `json:"Expiration"` }  type StsErrorInfo struct { 	StatusCode   int    `json:"StatusCode"` 	ErrorCode    string `json:"ErrorCode"` 	ErrorMessage string `json:"ErrorMessage"` }</code></pre> <h3 id="32-获取sts临时用户信息">3.2 获取STS临时用户信息</h3> <pre><code class="language-go">package aliyun  import ( 	"fmt" 	openapi "github.com/alibabacloud-go/darabonba-openapi/client" 	sts "github.com/alibabacloud-go/sts-20150401/client" 	"github.com/alibabacloud-go/tea/tea" 	log "github.com/sirupsen/logrus" ) // //  GetAliyunStsInfo //  @Description: 获取STS临时用户信息 //  @param isReturnAll //  @return *sts.AssumeRoleResponseBody // func GetAliyunStsInfo() *sts.AssumeRoleResponseBody { 	return generateStsInfo() }  /**  * 生成STS临时用户信息  */ func generateStsInfo() *sts.AssumeRoleResponseBody { 	client, _err := createClient(tea.String(AccessKeyId), tea.String(AccessKeySecret)) 	if _err != nil { 		fmt.Print(_err.Error()) 	} 	assumeRoleRequest := &amp;sts.AssumeRoleRequest{ 		RoleArn:         tea.String(RoleArn), 		RoleSessionName: tea.String(RoleSessionName), 	} 	resp, err := client.AssumeRole(assumeRoleRequest) 	if err != nil { 		fmt.Print(err.Error()) 	} 	fmt.Printf("获取STS临时用户信息:%v", resp) 	log.Info("获取STS临时用户信息:", resp) 	return (*resp).Body }  /**  * 使用AK&amp;SK初始化账号Client  * @param accessKeyId  * @param accessKeySecret  * @return Client  * @throws Exception  */ func createClient(accessKeyId *string, accessKeySecret *string) (_result *sts.Client, _err error) { 	config := &amp;openapi.Config{ 		AccessKeyId:     accessKeyId, 		AccessKeySecret: accessKeySecret, 	} 	// 访问的域名 	config.Endpoint = tea.String(stsEndpoint) 	_result = &amp;sts.Client{} 	_result, _err = sts.NewClient(config) 	return _result, _err }</code></pre> <ul> <li>我是使用新版的SDK阿里云demo中，修改了一下，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://next.api.aliyun.com/api/Sts/2015-04-01/AssumeRole?spm=a2c4g.11186623.0.0.45156dc1It2Bl2&amp;lang=GO&amp;params=%7B%7D&amp;sdkStyle=dara"  target="_blank" rel="nofollow">具体参考文档</a></li> <li>获取STS临时用户信息方法多个地方需要用到，所以我抽取出来供其他接口调用（比如授权访问就需要STS临时用户信息去生成signUrl）</li> </ul> <h3 id="33-接口调用">3.3 接口调用</h3> <h4 id="331不包含签名的sts临时用户信息">3.3.1不包含签名的STS临时用户信息</h4> <ul> <li>我这里用的gin框架，<strong>这个接口是不包含前端需要的签名（policy和Signature）的</strong>，需要前端使用oss插件（全部信息返回的写在另一个接口）</li> </ul> <pre><code class="language-go">/** 接口：获取sts用户 前端需要加载oss插件 不需要则去调用policy文件中AppAliyunPolicy */ func AppAliyunSts(c *gin.Context) { 	response := GetAliyunStsInfo() 	c.JSON(http.StatusOK, gin.H{ 		"code": 1, 		"data": response, 	}) 	return }</code></pre> <ul> <li>API调用，返回的信息<br /><img decoding="async" src="https://img-blog.csdnimg.cn/4ebd06351e164bd2a539b739ec0d793b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5a-85ryU5a2X5q-N,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"/></li> </ul> <h4 id="332含签名的sts临时用户信息">3.3.2含签名的STS临时用户信息</h4> <ul> <li>此接口好处就在前端不需要额外加载多余的包</li> </ul> <pre><code class="language-go">package aliyun  import ( 	"crypto/hmac" 	"crypto/sha1" 	"encoding/base64" 	"encoding/json" 	"fmt" 	"github.com/gin-gonic/gin" 	log "github.com/sirupsen/logrus" 	"hash" 	"io" 	"net/http" 	"time" ) /** 签名直传服务 用于小程序上传图片不用加载库 */ // 用户上传文件时指定的前缀。 //var upload_dir string = "user-dir/"  //过期时间3000秒 var expire_time int64 = 3000  type ConfigStruct struct { 	Expiration string     `json:"expiration"` 	Conditions [][]string `json:"conditions"` } type PolicyToken struct { 	StsTokenInfo 	Expire       int64  `json:"expire"` 	Signature    string `json:"signature"` 	Policy       string `json:"policy"` 	Directory    string `json:"dir"` 	UploadOssUrl string `json:"uploadOssUrl"` }  func AppAliyunPolicy(c *gin.Context) { 	uploadDir := c.DefaultQuery("dir", "user-dir/") 	//获取token2中的accessKeyId,accessKeySecret 	resp := GetAliyunStsInfo() 	log.Info(resp)  	now := time.Now().Unix() 	expire_end := now + expire_time 	var tokenExpire = getGmtIso8601(expire_end)  	//create post policy json 	var config ConfigStruct 	config.Expiration = tokenExpire 	var condition []string 	condition = append(condition, "starts-with") 	condition = append(condition, "$key") 	condition = append(condition, uploadDir) 	config.Conditions = append(config.Conditions, condition)  	//calucate signature 	result, err := json.Marshal(config) 	debyte := base64.StdEncoding.EncodeToString(result) 	h := hmac.New(func() hash.Hash { return sha1.New() }, []byte(*resp.Credentials.AccessKeySecret)) 	io.WriteString(h, debyte) 	signedStr := base64.StdEncoding.EncodeToString(h.Sum(nil))  	policyToken := &amp;PolicyToken{} 	policyToken.AccessKeyId = *resp.Credentials.AccessKeyId 	policyToken.AccessKeySecret = *resp.Credentials.AccessKeySecret 	policyToken.SecurityToken = *resp.Credentials.SecurityToken 	policyToken.Expiration = *resp.Credentials.Expiration 	policyToken.Expire = expire_end 	policyToken.Signature = string(signedStr) 	policyToken.Directory = uploadDir 	policyToken.Policy = string(debyte) 	policyToken.UploadOssUrl = UploadOssUrl 	if err != nil { 		fmt.Println("json err:", err) 	} 	c.JSON(http.StatusOK, gin.H{ 		"code": 1, 		"data": policyToken, 	}) 	return }  func getGmtIso8601(expireEnd int64) string { 	var tokenExpire = time.Unix(expireEnd, 0).UTC().Format("2006-01-02T15:04:05Z") 	return tokenExpire }</code></pre> <ul> <li>Get接口携带参数dir，指定放在哪个文件夹</li> <li>接口调用，返回信息<br /><img decoding="async" src="https://img-blog.csdnimg.cn/102a54cd8ecd44b38feffec56b1155eb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5a-85ryU5a2X5q-N,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"/></li> </ul> <h3 id="34-授权访问">3.4 授权访问</h3> <h4 id="341接口调用">3.4.1接口调用</h4> <ul> <li>阿里云提供了两种授权方式，<strong>URL授权</strong>和<strong>header头授权</strong>，我这里是图片授权所以选择了URL，图片需要授权携带签名参数才能请求到<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://help.aliyun.com/document_detail/59670.html"  target="_blank" rel="nofollow">具体参考文档</a></li> </ul> <pre><code class="language-go">package aliyun  import ( 	"fmt" 	"github.com/aliyun/aliyun-oss-go-sdk/oss" 	"github.com/gin-gonic/gin" 	"net/http" )  /** 图片授权访问 返回签名后的URL */ func GetSignURL(c *gin.Context) { 	accessKeyId := c.DefaultQuery("accessKeyId", "") 	accessKeySecret := c.DefaultQuery("accessKeySecret", "") 	securityToken := c.DefaultQuery("securityToken", "") 	fullImgPath := c.DefaultQuery("fullImgPath", "") //图片全路径 	//如果为空则去请求sts临时用户信息 	if accessKeyId == "" || accessKeySecret == "" || securityToken == "" { 		stsTokenInfo := GetAliyunStsInfo() 		accessKeyId = *stsTokenInfo.Credentials.AccessKeyId 		accessKeySecret = *stsTokenInfo.Credentials.AccessKeySecret 		securityToken = *stsTokenInfo.Credentials.SecurityToken 	}  	// 获取STS临时凭证后，您可以通过其中的安全令牌（SecurityToken）和临时访问密钥（AccessKeyId和AccessKeySecret）生成OSSClient。 	client, err := oss.New(Endpoint, accessKeyId, accessKeySecret, oss.SecurityToken(securityToken)) 	if err != nil { 		fmt.Print(err.Error()) 	} 	// 填写文件完整路径，例如exampledir/exampleobject.txt。文件完整路径中不能包含Bucket名称。 	objectName := fullImgPath 	// 获取存储空间。 	bucket, err := client.Bucket(BucketName) 	if err != nil { 		fmt.Print(err.Error()) 	}  	// 签名直传。 	signedURL, err := bucket.SignURL(objectName, oss.HTTPGet, 6000) 	if err != nil { 		fmt.Print(err.Error()) 	} 	c.JSON(http.StatusOK, gin.H{ 		"code": 1, 		"data": signedURL, 	}) }</code></pre> <ul> <li>这里有四个参数，前上个参数是请求STS临时用户获取到，前端传递过来的（此场景适用于<strong>上传图片后回显图片</strong>，就需要带签名的图片URL），如果前端没有传这三个参数，我们需要自己再去调用之前GetAliyunStsInfo()去生成，</li> <li>fullImgPath参数就是图片保存的全路径，填写文件完整路径，例如exampledir/exampleobject.txt。文件完整路径中<strong>不能包含Bucket名称</strong>。</li> </ul> <h4 id="342-api调用返回信息">3.4.2 API调用，返回信息</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e64250e5081bee7dad623f0a36f7f6b2.jpg" alt="golang对接阿里云私有Bucket上传图片、授权访问图片"></p> <ul> <li>如果没有授权，则会提示<br /><img decoding="async" src="https://img-blog.csdnimg.cn/a0ffc14b19c94d47a5d42f9f586bbc89.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5a-85ryU5a2X5q-N,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"/></li> </ul> <p>我碰到这个问题是因为没有给RAM角色设置OSS最高权限，<strong>谨记</strong></p> <ul> <li>如果过了有效期，则会提示</li> </ul> <pre><code class="language-xml">&lt;Error&gt; &lt;Code&gt;AccessDenied&lt;/Code&gt; &lt;Message&gt;Request has expired.&lt;/Message&gt; &lt;RequestId&gt;***&lt;/RequestId&gt; &lt;HostId&gt;****&lt;/HostId&gt; &lt;Expires&gt;2022-04-02T08:42:47.000Z&lt;/Expires&gt; &lt;ServerTime&gt;2022-04-03T03:56:52.000Z&lt;/ServerTime&gt; &lt;/Error&gt;</code></pre> <p>好了，以上接口经本人测试调通，耗时一天半，代码没什么，问题全出在配置权限上了，用来记录我的填坑之路</p> 			                    </div>

                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4288.htm">JavaScript如何查找数字的月份总和</a></p>
                                                <p>下一个：<a href="/html/category/article-4290.htm">青岛市动物医院 青岛市动物医院电话</a></p>
                                            </div>

                    
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4471.htm" title="动物疫苗的意义和作用是什么（动物疫苗的意义和作用是什么意思）">动物疫苗的意义和作用是什么（动物疫苗的意义和作用是什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-4431.htm" title="猫咪疫苗三针间隔时间（猫的疫苗三针隔多久）">猫咪疫苗三针间隔时间（猫的疫苗三针隔多久）</a></li>
                        <li class="py-2"><a href="/html/category/article-4507.htm" title="动物防疫站的职责是什么呢（动物防疫站的职责是什么呢英文）">动物防疫站的职责是什么呢（动物防疫站的职责是什么呢英文）</a></li>
                        <li class="py-2"><a href="/html/category/article-4291.htm" title="融安旅游景点哪个好玩的地方推荐(融安旅游景点哪个好玩的地方推荐一下)">融安旅游景点哪个好玩的地方推荐(融安旅游景点哪个好玩的地方推荐一下)</a></li>
                        <li class="py-2"><a href="/html/category/article-4320.htm" title="领养宠物赚钱吗的简单介绍">领养宠物赚钱吗的简单介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-4351.htm" title="动物疫苗使用管理办法（动物防疫疫苗管理）">动物疫苗使用管理办法（动物防疫疫苗管理）</a></li>
                        <li class="py-2"><a href="/html/category/article-4350.htm" title="办宠物医院需要什么证（宠物医院办理）">办宠物医院需要什么证（宠物医院办理）</a></li>
                        <li class="py-2"><a href="/html/category/article-4396.htm" title="动物防疫注射栏 动物防疫注射栏图纸">动物防疫注射栏 动物防疫注射栏图纸</a></li>
                        <li class="py-2"><a href="/html/category/article-4506.htm" title="宠物美容店需要办什么证才能开（宠物美容店需要办什么证才能开呢）">宠物美容店需要办什么证才能开（宠物美容店需要办什么证才能开呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-4321.htm" title="女人开始养猫意味着（养猫最忌讳的一个生肖）">女人开始养猫意味着（养猫最忌讳的一个生肖）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">14</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
        <div class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        Ireland Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/tiny-slider.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/aos.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/navbar.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/counter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/custom.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
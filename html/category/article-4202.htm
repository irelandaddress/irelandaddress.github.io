<!doctype html>
<html lang="zh-CN">

<head>
        <!-- Required meta tags -->
    <link rel="canonical" href="https://irelandaddress.github.io/html/category/article-4202.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/irelandaddress/favicon.ico" type="image/x-icon"/>
    <title>C#反射使用方法过程及步骤 - Ireland Address</title>
        <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/icomoon/style.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/tiny-slider.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/aos.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?638cd9f716f7b41384d0241d34bf2f4c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <div class="site-mobile-menu site-navbar-target">
        <div class="site-mobile-menu-header">
            <div class="site-mobile-menu-close">
                <span class="icofont-close js-menu-toggle"></span>
            </div>
        </div>
        <div class="site-mobile-menu-body"></div>
    </div>
    <nav class="site-nav mt-3">
        <div class="container">
            <div class="site-navigation">
                                <a href="/" class="logo m-0 mt-2 float-start">Ireland Address</a>
                                <ul class="js-clone-nav d-none d-lg-inline-block text-start site-menu float-end">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
                <a href="#" class="burger ml-auto float-right site-menu-toggle js-menu-toggle d-inline-block d-lg-none" data-toggle="collapse" data-target="#main-navbar">
                    <span></span>
                </a>
            </div>
        </div>
    </nav>
    <div class="hero-section body-page">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <h2 class="heading mb-3" data-aos="fade-up" data-aos-delay="100">文章分类</h2>
                    <p class="mb-5" data-aos="fade-up" data-aos-delay="200">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                    </p>
                </div>
                <div class="col-lg-6">
                    <div class="img-wrap" data-aos="fade-left">
                        <img src="/assets/addons/xcblog/img/irelandaddress/hero_1.png" alt="Image" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="section section-3">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div data-aos="fade-up">
                        <h1 class="mb-5 text-center">C#反射使用方法过程及步骤</h1>
                          				  				  				<div id="content_views" class="htmledit_views"> <h2>C#反射使用方法过程及步骤</h2> <blockquote> <p>1. 定义要访问类的全名</p> <p>2. 获取该类的类型</p> <p>3. 实例化该类</p> <p>4. 获取该类的字段、属性，方法</p> <p>5. 设置该字段或属性内容，或调用其方法</p> </blockquote> <p>从而达到使用字符串访问相应类的目的。</p> <h2>示例：</h2> <p>1. 根据窗口类的名称，产生一个新的窗口，相当于new 窗口类</p> <pre><code class="language-cs">//1. 定义窗口类名称：（窗口类的字符串名字，需要全路径名,否则获取不到TYPE）     string customClassName = @"IBAutoDeal.IBDealForms." + hasPanel.Text;   //2. 获取字符串customClassName(某个窗口类的字符串名字)指定类的Type Type customClassType = Type.GetType(customClassName);                  //3. 生成指定Type的实例，相当于new 类  object customClassObj = Activator.CreateInstance(customClassType);              // 4. 对新生成的类进行操作， 本例把new 出的窗口赋值给一个窗口变量                panelForm = customClassObj as Form;   // 由此达到使用类的字符串名生成一个该类的实例供后续程序的使用</code></pre> <p>2. 根据类的字符串名字，给该类的字段或属性赋值</p> <pre><code class="language-cs">//反射功能使用及步骤：以下示例为给字符串类名生成一个实例，并给该类的属性或字段赋值   // 1. 定义类名称：（类的字符串名字，需要全路径名,否则获取不到TYPE） string customVaribleName = @"IBAutoDeal.IBDealClass.CommVar";   // 2. 获取字符串 customVaribleName指定类的Type Type customVaribleType = Type.GetType(customVaribleName);   // 3. 生成指定Type的实例，相当于new 类  object customAaribleObj = Activator.CreateInstance(customVaribleType);   // 4. 获取该类字段，本例是给一个公共的窗体变量赋值，而该变量在此是字段 // 如果是给该类的属性赋值，就需要使用 PropertyInfo pi = customVaribleType.GetField("v" + hasPanel.Text) // 在该类中，某个域是属性还是字段呢？我个人的判断是，若该域提供了GET,SET方法，就为属性，否则为字段，也不知道正确否？ FieldInfo pi = customVaribleType.GetField("v" + hasPanel.Text);   // 5. 给该字段赋值，该字段是个窗口类变量，customClassObj就是示例1中根据字符串产生的窗口类 pi.SetValue(customAaribleObj, customClassObj);   // 通过以上5个步骤，完成了根据字符串的名字，给相应类的字段赋值</code></pre> <p>3. 根据类的字符串名字，读取字段值，并使用该字段值（示例中，该字段值是窗体，该示例是销毁该窗体）</p> <pre><code class="language-cs">// 1. 定义类名称：（类的字符串名字，需要全路径名,否则获取不到TYPE） string customVaribleName = @"IBAutoDeal.IBDealClass.CommVar";   // 2. 获取字符串 customVaribleName指定类的Type Type customVaribleType = Type.GetType(customVaribleName);   // 3. 生成指定Type的实例，相当于new 类  object customAaribleObj = Activator.CreateInstance(customVaribleType);   // 4. 获取该类字段，本例是给一个公共的窗体变量赋值，而该变量在此是字段 // 如果是给该类的属性赋值，就需要使用 PropertyInfo pi = customVaribleType.GetField("v" + hasPanel.Text) // 在该类中，某个域是属性还是字段呢？我个人的判断是，若该域提供了GET,SET方法，就为属性，否则为字段，也不知道正确否？ FieldInfo pi = customVaribleType.GetField("v" + e.Panel.Name);   // 5. 读取该字段的值（本示例该字段值为窗体，读取窗体变量，把销毁该窗体）  (pi.GetValue(customAaribleObj) as Form).Dispose();   // 6. 再为该字段赋空值 pi.SetValue(customAaribleObj, null);</code></pre> <p>4. 示例3原来是通过switch来判断需要关闭那个窗口，这样就会有很多的case语句，通过反射，就用示例3的6行代码取代了，下面贴出原程序的代码，目的是让大家了解反射的作用：</p> <pre><code class="language-cs">// 被示例3取代的原代码段（根据e.Panel.Name的值对相应窗口关闭，并给公用变量赋值） switch (e.Panel.Name)             {                 case "FrmAccountStatistics":                     CommVar.vFrmAccountStatistics.Dispose();                     CommVar.vFrmAccountStatistics = null;                     break;                 case "frmPositionManager":                     CommVar.vfrmPositionManager.Dispose();                     CommVar.vfrmPositionManager = null;                     break;                 case "frmTrader":                     CommVar.vfrmTrader.Dispose();                     CommVar.vfrmTrader = null;                     break;                 case "frmLog":                     CommVar.vfrmLog.Dispose();                    CommVar.vfrmLog = null;                     break;                 case "frmDataTransPlant":                                        CommVar.vfrmDataTransPlate.Dispose();                     CommVar.vfrmDataTransPlate = null;                     break;                 case "frmAccountTJ":                     CommVar.vfrmAccountTJ.Dispose();                     CommVar.vfrmAccountTJ = null;                     break;                 case "frmGridViewConfig":                     CommVar.vfrmGridViewConfig.Dispose();                     CommVar.vfrmGridViewConfig = null;                     break;                 case "frmTaticlistExcel":                     CommVar.vfrmTaticlistExcel.Dispose();                     CommVar.vfrmTaticlistExcel = null;                     break;                 case "frmQuoteLst":                     CommVar.vfrmQuoteLst.Dispose();                     CommVar.vfrmQuoteLst = null;                     break;                 case "frmProduct":                     CommVar.vfrmProduct.Dispose();                     CommVar.vfrmProduct = null;                     break;                 default:                     break;             }</code></pre> <p>5.&nbsp; 针对 T 的泛类型定义的类，给属性赋值示例代码如下：</p> <pre><code class="language-cs">public static T ReadClass&lt;T&gt;(string pClassName) where T:class         {             //1. 定义类名称：（因为有传入的T类，所以不需要类的名称了）               //2.获取类T的TYPE，注意，前面例子中是通过字符串取类型，使用的是Type.GetType()             Type classType = typeof(T);               //3. 生成指定 T 的实例，前面例子中，我们使用的是Activator.CreateInstance（classType）             T ClassObj = Activator.CreateInstance&lt;T&gt;();                          //4. 定义类的属性变量，因程序要多次读取不同的属性，在此定义一个局部变量             PropertyInfo classPropertyInfo = null;                          string tableName = "TradeParameters";                          //DataTable必须转成DataView才能使用RowFilter             DataTable vDt =  DataTableHelper.ReadTable(tableName);             DataView vDv = vDt.DefaultView;             vDv.RowFilter = $"ClassName = '{pClassName}'";               if (vDv.Count &gt; 0)             {                 string pName, pVaule;                 foreach(DataRow dr in vDv)                 {                     pName = dr["AttributeName"].ToString();                     pVaule = dr["AttributeValue"].ToString();                       //5. 获取指定名称属性                     classPropertyInfo = classType.GetProperty(pName);                     if (classPropertyInfo != null)                     {                         //6. 给指定属性赋值                         classPropertyInfo.SetValue(ClassObj, pVaule);                     }                                      }             }             return ClassObj;         }</code></pre> </p></div> 			                    </div>

                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4201.htm">vue实现动态列表尾部添加数据执行动画_vue.js</a></p>
                                                <p>下一个：<a href="/html/category/article-4203.htm">strftime locale&#8217; codec can&#8217;t encode character &#8216;\u4e2d&#8217; in position 31: Illegal byte sequ</a></p>
                                            </div>

                    
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4290.htm" title="青岛市动物医院 青岛市动物医院电话">青岛市动物医院 青岛市动物医院电话</a></li>
                        <li class="py-2"><a href="/html/category/article-4321.htm" title="女人开始养猫意味着（养猫最忌讳的一个生肖）">女人开始养猫意味着（养猫最忌讳的一个生肖）</a></li>
                        <li class="py-2"><a href="/html/category/article-4320.htm" title="领养宠物赚钱吗的简单介绍">领养宠物赚钱吗的简单介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-4291.htm" title="融安旅游景点哪个好玩的地方推荐(融安旅游景点哪个好玩的地方推荐一下)">融安旅游景点哪个好玩的地方推荐(融安旅游景点哪个好玩的地方推荐一下)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
        <div class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        Ireland Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/tiny-slider.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/aos.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/navbar.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/counter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/custom.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
<!doctype html>
<html lang="zh-CN">

<head>
        <!-- Required meta tags -->
    <link rel="canonical" href="https://irelandaddress.github.io/html/category/article-4197.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/irelandaddress/favicon.ico" type="image/x-icon"/>
    <title>AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具 - Ireland Address</title>
        <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/icomoon/style.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/tiny-slider.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/aos.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?638cd9f716f7b41384d0241d34bf2f4c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <div class="site-mobile-menu site-navbar-target">
        <div class="site-mobile-menu-header">
            <div class="site-mobile-menu-close">
                <span class="icofont-close js-menu-toggle"></span>
            </div>
        </div>
        <div class="site-mobile-menu-body"></div>
    </div>
    <nav class="site-nav mt-3">
        <div class="container">
            <div class="site-navigation">
                                <a href="/" class="logo m-0 mt-2 float-start">Ireland Address</a>
                                <ul class="js-clone-nav d-none d-lg-inline-block text-start site-menu float-end">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
                <a href="#" class="burger ml-auto float-right site-menu-toggle js-menu-toggle d-inline-block d-lg-none" data-toggle="collapse" data-target="#main-navbar">
                    <span></span>
                </a>
            </div>
        </div>
    </nav>
    <div class="hero-section body-page">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <h2 class="heading mb-3" data-aos="fade-up" data-aos-delay="100">文章分类</h2>
                    <p class="mb-5" data-aos="fade-up" data-aos-delay="200">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                    </p>
                </div>
                <div class="col-lg-6">
                    <div class="img-wrap" data-aos="fade-left">
                        <img src="/assets/addons/xcblog/img/irelandaddress/hero_1.png" alt="Image" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="section section-3">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div data-aos="fade-up">
                        <h1 class="mb-5 text-center">AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具</h1>
                          				  				  				<h1 id="前言">前言</h1> <p>在项目生产中日志的记录是必不可少的，在.net项目中，要说日志组件，<code>log4net</code>绝对可有一席之地，随着公司业务的发展，微服务则必定无可避免。在跨服务中通过日志进行分析性能或者排查故障点，如何快速定位日志尤为关键。链路追踪技术的出现正是解决这些痛点的。<br /> 分布式链路追踪需要收集单次请求所经过的所有服务，而且为了知道请求细节，还需要将具体的业务日志进行串联，而这一切的基础就是要通过一个<code>traceid</code>从头传到尾，相当于将该次请求过程产生的所有日志都关联其<code>traceid</code>，事后排查问题只需要知道<code>traceid</code>,就可以在日志中拉出与之关联的所有日志。</p> <p>当然不是所有的公司都需要链路追踪，对于一些小公司，就几个单体系统，压根不需要这些。比如我们使用<code>log4net</code>时，会在日志模板中加入<code>ThreadId</code>,例如这样的模板</p> <pre><code>"%date [%thread] %-5level - %message%newline"</code></pre> <p>虽然并发高时我们多个用户的请求日志都掺杂在一起，但是我们依然可以根据<code>线程号</code>将该次请求的日志进行串联。这在大多时候都很好的解决了我们的问题。</p> <h1 id="老传统做法">老传统做法</h1> <p>即使在体量不大的系统中上面的线程号很好用了，但是哪有一点不用多线程的业务场景呢，当一次请求进来后可能会开多个异步线程去执行，那上面的线程号就显得力不从心了，就是说没法一下将相干日志提取出来了。</p> <p>但是这难不倒我们，我们可以在业务开始时自定义一个随便字符串作为该次请求的唯一标识，然后将该变量通过参数传给下游方法，下游方法也将其一层一层接力传下去，在打印日志时都将该字段进行输出，这个办法很多人都用过吧。</p> <h1 id="aspnetcore的traceidentifier">AspNetCore的TraceIdentifier</h1> <p>难道没有一种优雅的方式能将我们某次请求的过程(包括多线程)进行串联起来的唯一标识吗？<br /> 在<code>ASPNetCore</code>中其实一直有个不起眼的属性<code>HttpContext.TraceIdentifier</code>，可以说他就是框架给我们提供的<code>traceid</code>，我们可以在所需要的地方都注入<code>HttpContext</code>来获取该参数，当然不许那么麻烦，只需要给日志组件获取到该值，在任何leave的日志输出时日志组件将其输出即可，这个完全没问题，大家可以去深入研究，有些日志组件可以直接配置就可以输出该<code>TraceIdentifier</code>值到每一条日志中，也可以将其使用到跨应用调用时传递到下游服务，如http请求可以通过header携带该值，下游从header中获取并作为它自己的<code>TraceIdentifier</code>继续传递。</p> <h1 id="asynclocal在链路追踪的应用">AsyncLocal在链路追踪的应用</h1> <p><code>ThreadLoacl</code>倒是熟悉，是每个线程之间隔离的，每个线程操作的都是自己线程的对象，能做到各个线程或不影响。<code>AsyncLocal</code>并不是一个新特性，只是用的场景不多，很少被使用</p> <h2 id="定义">定义</h2> <p>Represents ambient data that is local to a given asynchronous control flow, such as an asynchronous method.</p> <p>表示对于给定异步控制流（如异步方法）是本地数据的环境数据。</p> <h2 id="示例">示例</h2> <pre><code class="language-c#">using System; using System.Threading; using System.Threading.Tasks;  class Example {     static AsyncLocal&lt;string&gt; _asyncLocalString = new AsyncLocal&lt;string&gt;();      static ThreadLocal&lt;string&gt; _threadLocalString = new ThreadLocal&lt;string&gt;();      static async Task AsyncMethodA()     {         // Start multiple async method calls, with different AsyncLocal values.         // We also set ThreadLocal values, to demonstrate how the two mechanisms differ.         _asyncLocalString.Value = "Value 1";         _threadLocalString.Value = "Value 1";         var t1 = AsyncMethodB("Value 1");          _asyncLocalString.Value = "Value 2";         _threadLocalString.Value = "Value 2";         var t2 = AsyncMethodB("Value 2");          // Await both calls         await t1;         await t2;      }      static async Task AsyncMethodB(string expectedValue)     {         Console.WriteLine("Entering AsyncMethodB.");         Console.WriteLine("   Expected '{0}', AsyncLocal value is '{1}', ThreadLocal value is '{2}'",                            expectedValue, _asyncLocalString.Value, _threadLocalString.Value);         await Task.Delay(100);         Console.WriteLine("Exiting AsyncMethodB.");         Console.WriteLine("   Expected '{0}', got '{1}', ThreadLocal value is '{2}'",                            expectedValue, _asyncLocalString.Value, _threadLocalString.Value);     }      static async Task Main(string[] args)     {         await AsyncMethodA();     } } // The example displays the following output: //   Entering AsyncMethodB. //      Expected 'Value 1', AsyncLocal value is 'Value 1', ThreadLocal value is 'Value 1' //   Entering AsyncMethodB. //      Expected 'Value 2', AsyncLocal value is 'Value 2', ThreadLocal value is 'Value 2' //   Exiting AsyncMethodB. //      Expected 'Value 2', got 'Value 2', ThreadLocal value is '' //   Exiting AsyncMethodB. //      Expected 'Value 1', got 'Value 1', ThreadLocal value is ''</code></pre> <p>简单理解，就是对该变量赋值后，之影响自己个自己的子线程，即当前线程发起的其他线程，包括线程池中的线程，都能获取到该值，而子线程修改该值，对父线程来说是无影响的。而这种特性貌似就是我们寻找那种能够优雅标记出同一次请求的特性。定义一个全局变量，在每次请求的起点对该变量赋值一个随机字符串，然后本次请求涉及到的所有线程访问该值，都是我们在入口赋的值。</p> <h2 id="项目应用">项目应用</h2> <p>我们可以在任意地方定义一个全局变量，最好是放到LogHelper之中</p> <h3 id="aspnet4">AspNet4</h3> <pre><code class="language-c#">public static class LogHelper{     public static AsyncLocal&lt;string&gt; Traceid = new AsyncLocal&lt;string&gt;();     ... }</code></pre> <p>在授权过滤器中对该值进行赋值,一般授权过滤最先执行，可作为请求的入口点</p> <pre><code>LogHelper.TraceId.Value&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></pre> <p>在<code>log4net</code>的LogHelper中使用,日志模板为</p> <pre><code>"%date [%property{trace}] [%thread] %-5level - %message%newline"</code></pre> <pre><code class="language-c#">public&nbsp;static&nbsp;void&nbsp;Info(object&nbsp;message) {     ThreadContext.Properties["trace"]&nbsp;=&nbsp;TraceId.Value; &nbsp;&nbsp;&nbsp;&nbsp;Loger.Info(message); } ...</code></pre> <h3 id="aspnetcore">AspNetCore</h3> <p>注册中间件进行设置值,将自己的中间件注册靠前点</p> <pre><code class="language-c#">app.Use(delegate&nbsp;(HttpContext&nbsp;ctx,&nbsp;RequestDelegate&nbsp;next) { &nbsp;&nbsp;&nbsp;&nbsp;LogHelper.TraceId.Value&nbsp;=&nbsp;ctx.TraceIdentifier; &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;next(ctx); });</code></pre> <p>经验证与预期符合，该实现方式不依赖AspnetCore框架<code>HttpContext.TraceIdentifier</code>，提供一种实现链路追踪中传递<code>TraceId</code>的一种思路，如有不正确之处欢迎指正，如果该思路对您有帮助，请点赞分享。</p> 			                    </div>

                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4196.htm">springboot-autoConfiguration原理</a></p>
                                                <p>下一个：<a href="/html/category/article-4198.htm">spring-cloud之Feign服务调用降级</a></p>
                                            </div>

                    
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7103.htm" title="晚礼服十大品牌排行榜有哪些牌子(晚礼服十大品牌排行榜有哪些图片)">晚礼服十大品牌排行榜有哪些牌子(晚礼服十大品牌排行榜有哪些图片)</a></li>
                        <li class="py-2"><a href="/html/category/article-8114.htm" title="单位买咖啡机如何入账(公司买的咖啡机入哪个科目)">单位买咖啡机如何入账(公司买的咖啡机入哪个科目)</a></li>
                        <li class="py-2"><a href="/html/category/article-8299.htm" title="动物防疫法对人和动物危害严重（动物防疫法法律责任）">动物防疫法对人和动物危害严重（动物防疫法法律责任）</a></li>
                        <li class="py-2"><a href="/html/category/article-7424.htm" title="美丽的小丑摄影">美丽的小丑摄影</a></li>
                        <li class="py-2"><a href="/html/category/article-8023.htm" title="动物诊疗许可证在哪办手续啊（动物诊疗许可证在哪办手续啊多少钱）">动物诊疗许可证在哪办手续啊（动物诊疗许可证在哪办手续啊多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-8253.htm" title="动物注射疫苗后过敏反应的处理方法有 动物注射疫苗后过敏反应的处理方法有哪些">动物注射疫苗后过敏反应的处理方法有 动物注射疫苗后过敏反应的处理方法有哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-7011.htm" title="身上出癣的初期图片（猫癣会传染人吗）">身上出癣的初期图片（猫癣会传染人吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7195.htm" title="窗花怎么贴（窗花怎么贴不会掉）">窗花怎么贴（窗花怎么贴不会掉）</a></li>
                        <li class="py-2"><a href="/html/category/article-8068.htm" title="农大动物医院电话24小时营业吗北京 农大动物医院电话24小时营业吗北京市">农大动物医院电话24小时营业吗北京 农大动物医院电话24小时营业吗北京市</a></li>
                        <li class="py-2"><a href="/html/category/article-7655.htm" title="徐方舟（徐方舟电视剧视频）">徐方舟（徐方舟电视剧视频）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
        <div class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        Ireland Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/tiny-slider.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/aos.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/navbar.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/counter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/custom.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
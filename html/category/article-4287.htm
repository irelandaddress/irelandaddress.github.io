<!doctype html>
<html lang="zh-CN">

<head>
        <!-- Required meta tags -->
    <link rel="canonical" href="https://irelandaddress.github.io/html/category/article-4287.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/irelandaddress/favicon.ico" type="image/x-icon"/>
    <title>Springboot + MDC + traceId日志中打印唯一traceId - Ireland Address</title>
        <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/icomoon/style.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/fonts/irelandaddress/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/bootstrap.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/tiny-slider.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/aos.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/irelandaddress/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?638cd9f716f7b41384d0241d34bf2f4c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <div class="site-mobile-menu site-navbar-target">
        <div class="site-mobile-menu-header">
            <div class="site-mobile-menu-close">
                <span class="icofont-close js-menu-toggle"></span>
            </div>
        </div>
        <div class="site-mobile-menu-body"></div>
    </div>
    <nav class="site-nav mt-3">
        <div class="container">
            <div class="site-navigation">
                                <a href="/" class="logo m-0 mt-2 float-start">Ireland Address</a>
                                <ul class="js-clone-nav d-none d-lg-inline-block text-start site-menu float-end">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/html/category/">文章分类</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
                <a href="#" class="burger ml-auto float-right site-menu-toggle js-menu-toggle d-inline-block d-lg-none" data-toggle="collapse" data-target="#main-navbar">
                    <span></span>
                </a>
            </div>
        </div>
    </nav>
    <div class="hero-section body-page">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <h2 class="heading mb-3" data-aos="fade-up" data-aos-delay="100">文章分类</h2>
                    <p class="mb-5" data-aos="fade-up" data-aos-delay="200">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                    </p>
                </div>
                <div class="col-lg-6">
                    <div class="img-wrap" data-aos="fade-left">
                        <img src="/assets/addons/xcblog/img/irelandaddress/hero_1.png" alt="Image" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="section section-3">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div data-aos="fade-up">
                        <h1 class="mb-5 text-center">Springboot + MDC + traceId日志中打印唯一traceId</h1>
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>先看一张图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230118/9b82d81521240018e745e8f52ae76305.jpg" alt="Springboot + MDC + traceId日志中打印唯一traceId">有同学问：日志中[]中类似uuid的这个traceId是怎么实现的，这边文章就介绍下如何在springboot工程下用MDC实现日志文件中打印traceId。</p> <p><strong>1. 为什么需要这个traceId</strong><br /> 我们在定位问题的时候需要去日志中查找对应的位置，当我们一个接口的请求同用唯一的一个traceId，那我们只需要知道这个traceId，使用 grep ‘traceId’ xxx.log 语句就能准确的定位到目标日志。在这边文章会介绍如何去设置这个traceId，而后如何在接口返回这个traceId。</p> <pre><code class="prism language-csharp"><span class="token preprocessor property">#接口返回：</span> <span class="token punctuation">{<!-- --></span>     <span class="token string">"code"</span><span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>     <span class="token string">"dealStatus"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>     <span class="token string">"TRACE_ID"</span><span class="token punctuation">:</span> <span class="token string">"a10e6e8d-9953-4de9-b145-32eee6aa5562"</span> <span class="token punctuation">}</span> <span class="token preprocessor property">#查询日志</span>  grep <span class="token string">'a10e6e8d-9953-4de9-b145-32eee6aa5562'</span> xxxx<span class="token punctuation">.</span>log </code></pre> <p><strong>2.通过MDC设置traceId</strong><br /> 笔者目前遇到的项目，可以有三种情况去设置traceId。先简单的介绍MDC</p> <pre><code class="prism language-csharp"> <span class="token preprocessor property">#MDC定义</span>  <span class="token class-name">Mapped</span> <span class="token class-name">Diagnostic</span> Context，即：映射诊断环境。  MDC是 log4j 和 logback 提供的一种方便在多线程条件下记录日志的功能。  MDC 可以看成是一个与当前线程绑定的哈希表，可以往其中添加键值对。  <span class="token preprocessor property">#MDC的使用方法</span>  向MDC中设置值：MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  从MDC中取值：MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  将MDC中内容打印到日志中：<span class="token operator">%</span>X<span class="token punctuation">{<!-- --></span>key<span class="token punctuation">}</span> </code></pre> <p>2.1 使用filter过滤器设置traceId<br /> 新建一个过滤器，实现Filter，重写init，doFilter，destroy方法，设置traceId放在doFilter中，在destroy中调用MDC.clear()方法。</p> <pre><code class="prism language-csharp">@Slf4j @<span class="token function">WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"traceIdFilter"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/*"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> traceIdFilter implements Filter <span class="token punctuation">{<!-- --></span>  	<span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>          @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> throws ServletException <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span>             throws IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>   </code></pre> <p>2.2 使用JWT token过滤器的项目<br /> springboot项目经常使用spring security+jwt来做权限限制，在这种情况下，我们通过新建filter过滤器来设置traceId，那么在验证token这部分的日志就不会带上traceId，因此我们需要把代码放在jwtFilter中，如图：</p> <pre><code class="prism language-csharp"><span class="token comment">/**  * token过滤器 验证token有效性  *  * @author china  */</span> @<span class="token class-name">Component</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtAuthenticationTokenFilter</span> extends OncePerRequestFilter <span class="token punctuation">{<!-- --></span>     @<span class="token class-name">Autowired</span>     <span class="token keyword">private</span> <span class="token class-name">TokenService</span> tokenService<span class="token punctuation">;</span>      <span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>      @<span class="token class-name">Override</span>     <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>             throws ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">LoginUser</span> loginUser <span class="token operator">=</span> tokenService<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>SecurityUtils<span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             tokenService<span class="token punctuation">.</span><span class="token function">verifyToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">UsernamePasswordAuthenticationToken</span> authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loginUser<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             authenticationToken<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebAuthenticationDetailsSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>2.3 使用Interceptor拦截器设置traceId<br /> 定义一个拦截器，重写preHandle方法，在方法中通过MDC设置traceId</p> <pre><code class="prism language-csharp"><span class="token comment">/**  * MDC设置traceId拦截器  *  * @author china  */</span> @<span class="token class-name">Component</span> <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">TraceIdInterceptor</span> extends HandlerInterceptorAdapter <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> UNIQUE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> boolean <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>UNIQUE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token keyword">true</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  	@<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> @<span class="token class-name">Nullable</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>3.logback.xml中配置traceId</strong> <br /> 与之前的相比只是添加了[%X{TRACE_ID}]， [%X{***}]是一个模板，中间属性名是我们使用MDC put进去的。</p> <pre><code class="prism language-csharp"><span class="token preprocessor property">#之前</span> <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n"</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token preprocessor property">#增加traceId后</span> <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - [%X{TRACE_ID}] - %msg%n"</span> <span class="token operator">/</span><span class="token operator">&gt;</span> </code></pre> <p><strong>4.补充异步方法带入上下文的traceId</strong><br /> 异步方法会开启一个新线程，我们想要是异步方法和主线程共用同一个traceId，首先先新建一个任务适配器MdcTaskDecorator，如图：</p> <pre><code class="prism language-csharp"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MdcTaskDecorator</span> implements TaskDecorator      <span class="token comment">/**      * 使异步线程池获得主线程的上下文      * @param runnable      * @return      */</span>     @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token class-name">Runnable</span> <span class="token function">decorate</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">&gt;</span> map <span class="token operator">=</span> MDC<span class="token punctuation">.</span><span class="token function">getCopyOfContextMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 MDC<span class="token punctuation">.</span><span class="token function">setContextMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>                 runnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>                 MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p>然后，在线程池配置中增加executor.setTaskDecorator(new MdcTaskDecorator())的设置</p> <pre><code class="prism language-csharp"> <span class="token comment">/**  * 线程池配置  *  * @author china  **/</span> @EnableAsync @<span class="token class-name">Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolConfig</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>      @<span class="token function">Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"threadPoolTaskExecutor"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> <span class="token class-name">ThreadPoolTaskExecutor</span> <span class="token function">threadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span>keepAliveSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setTaskDecorator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MdcTaskDecorator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 线程池对拒绝任务(无线程可用)的处理策略</span>         executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> executor<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>最后，在业务代码上使用@Async开启异步方法即可</p> <pre><code class="prism language-csharp">    @<span class="token function">Async</span><span class="token punctuation">(</span><span class="token string">"threadPoolTaskExecutor"</span><span class="token punctuation">)</span>     <span class="token keyword">void</span> <span class="token function">testSyncMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p><strong>5.在接口放回中，增加traceId返回</strong><br /> 在笔者项目中，接口返回都使用了一个叫AjaxResult自定义类来包装，所以只需要把这个类的构造器中增加traceId返回即可，相对简单。</p> <pre><code class="prism language-csharp">   <span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>          <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象，使其表示一个空消息。      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象      *      * @param code 状态码      * @param msg  返回内容      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>CODE_TAG<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>MSG_TAG<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象      *      * @param code 状态码      * @param msg  返回内容      * @param data 数据对象      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>CODE_TAG<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>MSG_TAG<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>DATA_TAG<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			                    </div>

                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4286.htm">controller使用map接收参数注意事项</a></p>
                                                <p>下一个：<a href="/html/category/article-4288.htm">JavaScript如何查找数字的月份总和</a></p>
                                            </div>

                    
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4320.htm" title="领养宠物赚钱吗的简单介绍">领养宠物赚钱吗的简单介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-4430.htm" title="适合穷人养的猫价格低（可以穷养的猫）">适合穷人养的猫价格低（可以穷养的猫）</a></li>
                        <li class="py-2"><a href="/html/category/article-4541.htm" title="cross和crocs鞋子区别(crocs和cross是什么牌子)">cross和crocs鞋子区别(crocs和cross是什么牌子)</a></li>
                        <li class="py-2"><a href="/html/category/article-4350.htm" title="办宠物医院需要什么证（宠物医院办理）">办宠物医院需要什么证（宠物医院办理）</a></li>
                        <li class="py-2"><a href="/html/category/article-4542.htm" title="猫咬伤多久能好（猫咬了之后多久多长时间***）">猫咬伤多久能好（猫咬了之后多久多长时间***）</a></li>
                        <li class="py-2"><a href="/html/category/article-4290.htm" title="青岛市动物医院 青岛市动物医院电话">青岛市动物医院 青岛市动物医院电话</a></li>
                        <li class="py-2"><a href="/html/category/article-4578.htm" title="日产cvt专用变速箱油(日产的cvt变速箱油需要更换吗)">日产cvt专用变速箱油(日产的cvt变速箱油需要更换吗)</a></li>
                        <li class="py-2"><a href="/html/category/article-4506.htm" title="宠物美容店需要办什么证才能开（宠物美容店需要办什么证才能开呢）">宠物美容店需要办什么证才能开（宠物美容店需要办什么证才能开呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-4507.htm" title="动物防疫站的职责是什么呢（动物防疫站的职责是什么呢英文）">动物防疫站的职责是什么呢（动物防疫站的职责是什么呢英文）</a></li>
                        <li class="py-2"><a href="/html/category/article-4397.htm" title="济南 宠物领养 济南宠物领养">济南 宠物领养 济南宠物领养</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
        <div class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        Ireland Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/tiny-slider.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/aos.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/navbar.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/counter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/irelandaddress/custom.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>